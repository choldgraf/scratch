name: Build documentation and check links

on:
  workflow_dispatch:
  push:

env:
  ISSUE_NUMBER: 1
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  check-links:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          cache: 'pip'

      - name: Build the documentation
        continue-on-error: true  # So we'll trigger the next steps if job fails
        run: |
          pip install -r requirements.txt
          sphinx-build docs docs/_build/html -w sphinxwarnings.txt

      # ref: https://github.com/lycheeverse/lychee-action
      # ref: https://github.com/lycheeverse/lychee#commandline-parameters
      - name: Link check with Lychee
        uses: lycheeverse/lychee-action@v1.5.0
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        continue-on-error: true  # So we'll trigger the next steps if job fails
        with:
          fail: true
          jobSummary: true
          args: >
            docs/_build/**/*.html
            --insecure
            --max-retries 3
        id: linkCheck

      # This only runs if sphinxwarnings.txt is not empty
      - name: Concatenate Sphinx Warnings with lychee output
        run: '[ -s sphinxwarnings.txt ] && echo -e "\n\n### Sphinx Warnings:\n" >> ./lychee/out.md && cat sphinxwarnings.txt >> ./lychee/out.md && echo "SPHINX_WARNINGS=TRUE" >> $GITHUB_ENV'

      - name: Create issue from Lychee output
        if: steps.linkCheck.outcome == 'failure' || env.SPHINX_WARNINGS == 'TRUE'
        uses: peter-evans/create-issue-from-file@v4.0.0
        with:
          issue-number: ${{env.ISSUE_NUMBER}}
          title: Broken links in documentation
          content-filepath: ./lychee/out.md

      - name: Re-open the links issue
        if: steps.linkCheck.outcome == 'failure' || env.SPHINX_WARNINGS == 'TRUE'
        run: gh issue reopen $ISSUE_NUMBER

